diff --git a/others/luci-app-control-webrestriction/Makefile b/others/luci-app-control-webrestriction/Makefile
index f0e0c5e..00439af 100755
--- a/others/luci-app-control-webrestriction/Makefile
+++ b/others/luci-app-control-webrestriction/Makefile
@@ -10,6 +10,10 @@ LUCI_PKGARCH:=all
 PKG_VERSION:=1.0
 PKG_RELEASE:=5-20200107
 
+define Package/luci-app-control-webrestriction/conffiles
+/etc/config/webrestriction_bypass.list
+endef
+
 include $(TOPDIR)/feeds/luci/luci.mk
 
 # call BuildPackage - OpenWrt buildroot signature
diff --git a/others/luci-app-control-webrestriction/luasrc/model/cbi/webrestriction.lua b/others/luci-app-control-webrestriction/luasrc/model/cbi/webrestriction.lua
index 8727a8a..0918c51 100755
--- a/others/luci-app-control-webrestriction/luasrc/model/cbi/webrestriction.lua
+++ b/others/luci-app-control-webrestriction/luasrc/model/cbi/webrestriction.lua
@@ -1,30 +1,60 @@
-local o = require "luci.sys"
-local a, e, t
-a = Map("webrestriction", translate("访问限制"), translate(
-            "使用黑名单或者白名单模式控制列表中的客户端是否能够连接到互联网。"))
+local n = require "luci.sys"
+local i = require "nixio.fs"
+local a, t, e
+a = Map("webrestriction", translate("访问限制"), translate("使用黑名单或者白名单模式控制列表中的客户端是否能够连接到互联网。"))
 a.template = "webrestriction/index"
-e = a:section(TypedSection, "basic", translate("Running Status"))
-e.anonymous = true
-t = e:option(DummyValue, "webrestriction_status", translate("当前状态"))
-t.template = "webrestriction/webrestriction"
-t.value = translate("Collecting data...")
-e = a:section(TypedSection, "basic", translate("全局设置"))
-e.anonymous = true
-t = e:option(Flag, "enable", translate("开启"))
-t.rmempty = false
-t = e:option(ListValue, "limit_type", translate("限制模式"))
-t.default = "blacklist"
-t:value("whitelist", translate("白名单"))
-t:value("blacklist", translate("Blacklist"))
-t.rmempty = false
-e = a:section(TypedSection, "macbind", translate("名单设置"), translate(
-                  "如果是黑名单模式，列表中的客户端将被禁止连接到互联网；白名单模式表示仅有列表中的客户端可以连接到互联网。"))
-e.template = "cbi/tblsection"
-e.anonymous = true
-e.addremove = true
-t = e:option(Flag, "enable", translate("开启控制"))
-t.rmempty = false
-t = e:option(Value, "macaddr", translate("MAC地址"))
-t.rmempty = true
-o.net.mac_hints(function(e, a) t:value(e, "%s (%s)" % {e, a}) end)
+t = a:section(TypedSection, "basic", translate("Running Status"))
+t.anonymous = true
+e = t:option(DummyValue, "webrestriction_status", translate("当前状态"))
+e.template = "webrestriction/webrestriction"
+e.value = translate("Collecting data...")
+t = a:section(TypedSection, "basic", translate("全局设置"))
+t.anonymous = true
+t:tab("basic", translate("基本设置"))
+e = t:taboption("basic", Flag, "enable", translate("开启"))
+e.rmempty = false
+e = t:taboption("basic", ListValue, "limit_type", translate("限制模式"))
+e.default = "blacklist"
+e:value("whitelist", translate("Whitelist"))
+e:value("blacklist", translate("Blacklist"))
+e.rmempty = false
+t:tab("global_bypass", translate("IP白名单"))
+local o = "/etc/config/webrestriction_bypass.list"
+e = t:taboption("global_bypass", TextValue, "global_bypass_conf")
+e.rows = 13
+e.wrap = "off"
+e.rmempty = true
+e.cfgvalue = function(t, t)
+    return i.readfile(o) or ""
+end
+e.write = function(a, a, t)
+    i.writefile(o, t:gsub("\r\n", "\n"))
+end
+e.remove = function(e, e, e)
+    i.writefile(o, "")
+end
+t = a:section(TypedSection, "macbind", translate("名单设置"), translate("如果是黑名单模式，列表中的客户端将被禁止连接到互联网；白名单模式表示仅有列表中的客户端可以连接到互联网。"))
+t.template = "cbi/tblsection"
+t.anonymous = true
+t.addremove = true
+e = t:option(Flag, "enable", translate("开启控制"))
+e.rmempty = false
+e = t:option(Value, "macaddr", translate("MAC地址"))
+e.rmempty = true
+local t = n.net.mac_hints()
+local o = {}
+for t, e in pairs(t) do
+    o[e[1]:lower()] = e[2]
+end
+luci.ip.neighbors({ family = 4 }, function(t)
+    if t.reachable then
+        local a
+        if o[t.mac] then
+            a = o[t.mac]
+        else
+            a = '-'
+        end
+        e:value(t.mac, "%s (%s,%s)" % { t.dest:string(), t.mac, a })
+    end
+end)
 return a
diff --git a/others/luci-app-control-webrestriction/root/etc/init.d/webrestriction b/others/luci-app-control-webrestriction/root/etc/init.d/webrestriction
index f4efda8..81ce762 100755
--- a/others/luci-app-control-webrestriction/root/etc/init.d/webrestriction
+++ b/others/luci-app-control-webrestriction/root/etc/init.d/webrestriction
@@ -45,21 +45,25 @@ add_rule(){
 		fi
 		if [ "$enable" == "1" ]; then
 			iptables -t filter -A WEB_RESTRICTION -m mac --mac-source $macaddr -j $action
-			[ "$limit_type" == "blacklist" ] && iptables -t nat -A WEB_RESTRICTION -m mac --mac-source $macaddr -j RETURN		
-			#unset "$macaddr"		
+			if [ "$limit_type" == "blacklist" ]; then
+			 iptables -t nat -I WEB_RESTRICTION -m mac --mac-source $macaddr -j DNAT --to 0.0.0.1
+			fi
+			#unset "$macaddr"
 		fi
 	done
 }
 
 start(){
-	
+
 	! load_config && exit 0
 	[ "`iptables -L FORWARD|grep -c WEB_RESTRICTION`" -gt 0 ] && exit 0;
 	iptables -P FORWARD DROP
 	iptables -t filter -N WEB_RESTRICTION
 	if [ "$limit_type" == "blacklist" ]; then
 		iptables -t nat -N WEB_RESTRICTION
+		iptables -t nat -A WEB_RESTRICTION -j RETURN
 		add_rule DROP
+		for ip in `cat /etc/config/webrestriction_bypass.list`; do iptables -t filter -I WEB_RESTRICTION -d $ip -j RETURN;iptables -t nat -I WEB_RESTRICTION -d $ip -j RETURN;done;
 	else
 		add_rule ACCEPT
 		iptables -t filter -A WEB_RESTRICTION -j DROP
@@ -83,4 +87,4 @@ stop(){
 		iptables -t nat -F WEB_RESTRICTION
 		iptables -t nat -X WEB_RESTRICTION
 	}
-}
\ No newline at end of file
+}
